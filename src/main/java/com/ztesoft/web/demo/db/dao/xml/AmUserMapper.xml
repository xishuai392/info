<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.ztesoft.web.demo.db.dao.mapper.IAmUserMapper" >
	<resultMap id="BaseResultMap" type="com.ztesoft.web.demo.db.po.AmUserPO">
		<id column="USER_ID" property="userId" jdbcType="INTEGER" />
		<result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
		<result column="NICK_NAME" property="nickName" jdbcType="VARCHAR" />
		<result column="USER_CODE" property="userCode" jdbcType="VARCHAR" />
		<result column="TELEPHONE" property="telephone" jdbcType="VARCHAR" />
		<result column="EMAIL" property="email" jdbcType="VARCHAR" />
		<result column="PASSWORD" property="password" jdbcType="VARCHAR" />
		<result column="AGE" property="age" jdbcType="INTEGER" />
		<result column="STATE" property="state" jdbcType="CHAR" />
		<result column="CREATED_DATE" property="createdDate" jdbcType="TIMESTAMP" />
		<result column="TEST_NUMBER_ONE" property="testNumberOne" jdbcType="DECIMAL" />
		<result column="TEST_NUMBER_TWO" property="testNumberTwo" jdbcType="DECIMAL" />
		<result column="TEST_DOUBLE_ONE" property="testDoubleOne" jdbcType="DOUBLE" />
		<result column="TEST_DOUBLE_TWO" property="testDoubleTwo" jdbcType="DOUBLE" />
		<result column="PHOTO" property="photo" jdbcType="LONGVARBINARY" />
		<result column="TEST_TEXT" property="testText" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List" >
  	USER_ID,USER_NAME,NICK_NAME,USER_CODE,TELEPHONE,EMAIL,PASSWORD,AGE,STATE,CREATED_DATE,TEST_NUMBER_ONE,TEST_NUMBER_TWO,TEST_DOUBLE_ONE,TEST_DOUBLE_TWO,PHOTO,TEST_TEXT
	</sql>
	<sql id="Arg_Where_Clause" >
		<where >
			<foreach collection="oredCriteria" item="criteria" separator="or" >
				<if test="criteria.valid" >
					<trim prefix="(" suffix=")" prefixOverrides="and" >
						<foreach collection="criteria.criteria" item="criterion" >
							<choose >
								<when test="criterion.noValue" >
                  and ${criterion.condition}
								</when>
								<when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue" >
                  and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Arg_Where_Clause" >
		<where >
			<foreach collection="arg.oredCriteria" item="criteria" separator="or" >
				<if test="criteria.valid" >
					<trim prefix="(" suffix=")" prefixOverrides="and" >
						<foreach collection="criteria.criteria" item="criterion" >
							<choose >
								<when test="criterion.noValue" >
                  and ${criterion.condition}
								</when>
								<when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue" >
                  and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<select id="selectByArg" resultMap="BaseResultMap" parameterType="com.ztesoft.web.demo.db.arg.AmUserArg" >
    select
		<if test="distinct" >
      distinct
		</if>
		<include refid="Base_Column_List" />
    from am_user
		<if test="_parameter != null" >
			<include refid="Arg_Where_Clause" />
		</if>
		<if test="orderByClause != null" >
      order by ${orderByClause}
		</if>
	</select>
	<select id="selectByArgAndPage" resultMap="BaseResultMap" parameterType="com.ztesoft.web.demo.db.arg.AmUserArg" >
    select
		<if test="distinct" >
      distinct
		</if>
		<if test="columns == null" >
			<include refid="Base_Column_List" />
		</if>
		<if test="columns != null" >
    	${columns}
		</if>
    from am_user
		<if test="_parameter != null" >
			<include refid="Arg_Where_Clause" />
		</if>
		<if test="groupByClause != null" >
      group by ${groupByClause}
		</if>
		<if test="orderByClause != null" >
      order by ${orderByClause}
		</if>
	</select>
	<delete id="deleteByArg" parameterType="com.ztesoft.web.demo.db.arg.AmUserArg" >
    delete from am_user
		<if test="_parameter != null" >
			<include refid="Arg_Where_Clause" />
		</if>
	</delete>
	<select id="countByArg" parameterType="com.ztesoft.web.demo.db.arg.AmUserArg" resultType="java.lang.Integer" >
		<if test="countsql1 != null" >
    	${countsql1}
			<if test="_parameter != null" >
				<include refid="Arg_Where_Clause" />
			</if>
		${countsql2}
		</if>
		<if test="countsql1 == null" >
		select count(*) from am_user
			<if test="_parameter != null" >
				<include refid="Arg_Where_Clause" />
			</if>
		</if>
	</select>
	<update id="updateByArgSelective" parameterType="map" >
    update am_user
		<set >
			<if test="record.userName != null" >
		USER_NAME= #{record.userName,jdbcType=VARCHAR},
			</if>
			<if test="record.nickName != null" >
		NICK_NAME= #{record.nickName,jdbcType=VARCHAR},
			</if>
			<if test="record.userCode != null" >
		USER_CODE= #{record.userCode,jdbcType=VARCHAR},
			</if>
			<if test="record.telephone != null" >
		TELEPHONE= #{record.telephone,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null" >
		EMAIL= #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null" >
		PASSWORD= #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.age != null" >
		AGE= #{record.age,jdbcType=INTEGER},
			</if>
			<if test="record.state != null" >
		STATE= #{record.state,jdbcType=CHAR},
			</if>
			<if test="record.createdDate != null" >
		CREATED_DATE= #{record.createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.testNumberOne != null" >
		TEST_NUMBER_ONE= #{record.testNumberOne,jdbcType=DECIMAL},
			</if>
			<if test="record.testNumberTwo != null" >
		TEST_NUMBER_TWO= #{record.testNumberTwo,jdbcType=DECIMAL},
			</if>
			<if test="record.testDoubleOne != null" >
		TEST_DOUBLE_ONE= #{record.testDoubleOne,jdbcType=DOUBLE},
			</if>
			<if test="record.testDoubleTwo != null" >
		TEST_DOUBLE_TWO= #{record.testDoubleTwo,jdbcType=DOUBLE},
			</if>
			<if test="record.photo != null" >
		PHOTO= #{record.photo,jdbcType=LONGVARBINARY},
			</if>
			<if test="record.testText != null" >
		TEST_TEXT= #{record.testText,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null" >
			<include refid="Update_By_Arg_Where_Clause" />
		</if>
	</update>
	<update id="updateByArg" parameterType="map" >
    update am_user
    set 
		USER_NAME = #{record.userName,jdbcType=VARCHAR},	NICK_NAME = #{record.nickName,jdbcType=VARCHAR},	USER_CODE = #{record.userCode,jdbcType=VARCHAR},	TELEPHONE = #{record.telephone,jdbcType=VARCHAR},	EMAIL = #{record.email,jdbcType=VARCHAR},	PASSWORD = #{record.password,jdbcType=VARCHAR},	AGE = #{record.age,jdbcType=INTEGER},	STATE = #{record.state,jdbcType=CHAR},	CREATED_DATE = #{record.createdDate,jdbcType=TIMESTAMP},	TEST_NUMBER_ONE = #{record.testNumberOne,jdbcType=DECIMAL},	TEST_NUMBER_TWO = #{record.testNumberTwo,jdbcType=DECIMAL},	TEST_DOUBLE_ONE = #{record.testDoubleOne,jdbcType=DOUBLE},	TEST_DOUBLE_TWO = #{record.testDoubleTwo,jdbcType=DOUBLE},	PHOTO = #{record.photo,jdbcType=LONGVARBINARY},	TEST_TEXT = #{record.testText,jdbcType=VARCHAR}
		<if test="_parameter != null" >
			<include refid="Update_By_Arg_Where_Clause" />
		</if>
	</update>
	<insert id="insert" parameterType="com.ztesoft.web.demo.db.po.AmUserPO" >
		insert into am_user(USER_ID,USER_NAME,NICK_NAME,USER_CODE,TELEPHONE,EMAIL,PASSWORD,AGE,STATE,CREATED_DATE,TEST_NUMBER_ONE,TEST_NUMBER_TWO,TEST_DOUBLE_ONE,TEST_DOUBLE_TWO,PHOTO,TEST_TEXT
			)
		 values (#{userId,jdbcType=INTEGER},#{userName,jdbcType=VARCHAR},#{nickName,jdbcType=VARCHAR},#{userCode,jdbcType=VARCHAR},#{telephone,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{age,jdbcType=INTEGER},#{state,jdbcType=CHAR},#{createdDate,jdbcType=TIMESTAMP},#{testNumberOne,jdbcType=DECIMAL},#{testNumberTwo,jdbcType=DECIMAL},#{testDoubleOne,jdbcType=DOUBLE},#{testDoubleTwo,jdbcType=DOUBLE},#{photo,jdbcType=LONGVARBINARY},#{testText,jdbcType=VARCHAR}
			)
	</insert>
	<insert id="insertSelective" parameterType="com.ztesoft.web.demo.db.po.AmUserPO" >
		insert into am_user
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="userId != null" >
		USER_ID,
			</if>
			<if test="userName != null" >
		USER_NAME,
			</if>
			<if test="nickName != null" >
		NICK_NAME,
			</if>
			<if test="userCode != null" >
		USER_CODE,
			</if>
			<if test="telephone != null" >
		TELEPHONE,
			</if>
			<if test="email != null" >
		EMAIL,
			</if>
			<if test="password != null" >
		PASSWORD,
			</if>
			<if test="age != null" >
		AGE,
			</if>
			<if test="state != null" >
		STATE,
			</if>
			<if test="createdDate != null" >
		CREATED_DATE,
			</if>
			<if test="testNumberOne != null" >
		TEST_NUMBER_ONE,
			</if>
			<if test="testNumberTwo != null" >
		TEST_NUMBER_TWO,
			</if>
			<if test="testDoubleOne != null" >
		TEST_DOUBLE_ONE,
			</if>
			<if test="testDoubleTwo != null" >
		TEST_DOUBLE_TWO,
			</if>
			<if test="photo != null" >
		PHOTO,
			</if>
			<if test="testText != null" >
		TEST_TEXT,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="userId != null" >
		#{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null" >
		#{userName,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null" >
		#{nickName,jdbcType=VARCHAR},
			</if>
			<if test="userCode != null" >
		#{userCode,jdbcType=VARCHAR},
			</if>
			<if test="telephone != null" >
		#{telephone,jdbcType=VARCHAR},
			</if>
			<if test="email != null" >
		#{email,jdbcType=VARCHAR},
			</if>
			<if test="password != null" >
		#{password,jdbcType=VARCHAR},
			</if>
			<if test="age != null" >
		#{age,jdbcType=INTEGER},
			</if>
			<if test="state != null" >
		#{state,jdbcType=CHAR},
			</if>
			<if test="createdDate != null" >
		#{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="testNumberOne != null" >
		#{testNumberOne,jdbcType=DECIMAL},
			</if>
			<if test="testNumberTwo != null" >
		#{testNumberTwo,jdbcType=DECIMAL},
			</if>
			<if test="testDoubleOne != null" >
		#{testDoubleOne,jdbcType=DOUBLE},
			</if>
			<if test="testDoubleTwo != null" >
		#{testDoubleTwo,jdbcType=DOUBLE},
			</if>
			<if test="photo != null" >
		#{photo,jdbcType=LONGVARBINARY},
			</if>
			<if test="testText != null" >
		#{testText,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<insert id="insertBatch" parameterType="list" >
		insert into am_user(USER_ID,USER_NAME,NICK_NAME,USER_CODE,TELEPHONE,EMAIL,PASSWORD,AGE,STATE,CREATED_DATE,TEST_NUMBER_ONE,TEST_NUMBER_TWO,TEST_DOUBLE_ONE,TEST_DOUBLE_TWO,PHOTO,TEST_TEXT
			)
		 values 
		<foreach collection="list" item="item" index="index" separator=",">(#{ item.userId,jdbcType=INTEGER},#{ item.userName,jdbcType=VARCHAR},#{ item.nickName,jdbcType=VARCHAR},#{ item.userCode,jdbcType=VARCHAR},#{ item.telephone,jdbcType=VARCHAR},#{ item.email,jdbcType=VARCHAR},#{ item.password,jdbcType=VARCHAR},#{ item.age,jdbcType=INTEGER},#{ item.state,jdbcType=CHAR},#{ item.createdDate,jdbcType=TIMESTAMP},#{ item.testNumberOne,jdbcType=DECIMAL},#{ item.testNumberTwo,jdbcType=DECIMAL},#{ item.testDoubleOne,jdbcType=DOUBLE},#{ item.testDoubleTwo,jdbcType=DOUBLE},#{ item.photo,jdbcType=LONGVARBINARY},#{ item.testText,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
		delete from am_user
 where USER_ID = #{userId,jdbcType=INTEGER}
	</delete>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
		select
		<include refid="Base_Column_List" />
		from am_user
 where USER_ID = #{userId,jdbcType=INTEGER}
	</select>
	<update id="updateByPrimaryKeySelective" parameterType="com.ztesoft.web.demo.db.po.AmUserPO" >
		update am_user
		<set >
			<if test="userName != null" >
		USER_NAME = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null" >
		NICK_NAME = #{nickName,jdbcType=VARCHAR},
			</if>
			<if test="userCode != null" >
		USER_CODE = #{userCode,jdbcType=VARCHAR},
			</if>
			<if test="telephone != null" >
		TELEPHONE = #{telephone,jdbcType=VARCHAR},
			</if>
			<if test="email != null" >
		EMAIL = #{email,jdbcType=VARCHAR},
			</if>
			<if test="password != null" >
		PASSWORD = #{password,jdbcType=VARCHAR},
			</if>
			<if test="age != null" >
		AGE = #{age,jdbcType=INTEGER},
			</if>
			<if test="state != null" >
		STATE = #{state,jdbcType=CHAR},
			</if>
			<if test="createdDate != null" >
		CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="testNumberOne != null" >
		TEST_NUMBER_ONE = #{testNumberOne,jdbcType=DECIMAL},
			</if>
			<if test="testNumberTwo != null" >
		TEST_NUMBER_TWO = #{testNumberTwo,jdbcType=DECIMAL},
			</if>
			<if test="testDoubleOne != null" >
		TEST_DOUBLE_ONE = #{testDoubleOne,jdbcType=DOUBLE},
			</if>
			<if test="testDoubleTwo != null" >
		TEST_DOUBLE_TWO = #{testDoubleTwo,jdbcType=DOUBLE},
			</if>
			<if test="photo != null" >
		PHOTO = #{photo,jdbcType=LONGVARBINARY},
			</if>
			<if test="testText != null" >
		TEST_TEXT = #{testText,jdbcType=VARCHAR},
			</if>
		</set >
	 where USER_ID = #{userId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ztesoft.web.demo.db.po.AmUserPO" >
		update am_user
		set 
		USER_NAME = #{userName,jdbcType=VARCHAR},
		NICK_NAME = #{nickName,jdbcType=VARCHAR},
		USER_CODE = #{userCode,jdbcType=VARCHAR},
		TELEPHONE = #{telephone,jdbcType=VARCHAR},
		EMAIL = #{email,jdbcType=VARCHAR},
		PASSWORD = #{password,jdbcType=VARCHAR},
		AGE = #{age,jdbcType=INTEGER},
		STATE = #{state,jdbcType=CHAR},
		CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
		TEST_NUMBER_ONE = #{testNumberOne,jdbcType=DECIMAL},
		TEST_NUMBER_TWO = #{testNumberTwo,jdbcType=DECIMAL},
		TEST_DOUBLE_ONE = #{testDoubleOne,jdbcType=DOUBLE},
		TEST_DOUBLE_TWO = #{testDoubleTwo,jdbcType=DOUBLE},
		PHOTO = #{photo,jdbcType=LONGVARBINARY},
		TEST_TEXT = #{testText,jdbcType=VARCHAR}
	 where USER_ID = #{userId,jdbcType=INTEGER}
	</update>
</mapper>