<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.ztesoft.web.demo.db.dao.mapper.IAmUserRoleMapper" >
    <resultMap id="BaseResultMap" type="com.ztesoft.web.demo.db.po.AmUserRolePO">
		<id column="USER_ROLE_ID" property="userRoleId" jdbcType="INTEGER" />
		<result column="ROLE_ID" property="roleId" jdbcType="INTEGER" />
		<result column="USER_ID" property="userId" jdbcType="INTEGER" />
		<result column="CREATED_DATE" property="createdDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
  	USER_ROLE_ID,ROLE_ID,USER_ID,CREATED_DATE
  </sql>
  <sql id="Arg_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Arg_Where_Clause" >
    <where >
      <foreach collection="arg.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByArg" resultMap="BaseResultMap" parameterType="com.ztesoft.web.demo.db.arg.AmUserRoleArg" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from am_user_role
    <if test="_parameter != null" >
      <include refid="Arg_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByArgAndPage" resultMap="BaseResultMap" parameterType="com.ztesoft.web.demo.db.arg.AmUserRoleArg" >
    select
    <if test="distinct" >
      distinct
    </if>
     <if test="columns == null" >
    	<include refid="Base_Column_List" />
    </if>
    <if test="columns != null" >
    	${columns}
   	</if>
    from am_user_role
    <if test="_parameter != null" >
      <include refid="Arg_Where_Clause" />
    </if>
	<if test="groupByClause != null" >
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByArg" parameterType="com.ztesoft.web.demo.db.arg.AmUserRoleArg" >
    delete from am_user_role
    <if test="_parameter != null" >
      <include refid="Arg_Where_Clause" />
    </if>
  </delete>
  <select id="countByArg" parameterType="com.ztesoft.web.demo.db.arg.AmUserRoleArg" resultType="java.lang.Integer" >
    <if test="countsql1 != null" >
    	${countsql1}
    	<if test="_parameter != null" >
		  <include refid="Arg_Where_Clause" />
		</if>
		${countsql2}
    </if>
	<if test="countsql1 == null" >
		select count(*) from am_user_role
		<if test="_parameter != null" >
		  <include refid="Arg_Where_Clause" />
		</if>
	</if>
  </select>
  <update id="updateByArgSelective" parameterType="map" >
    update am_user_role
    <set >
		<if test="record.roleId != null" >
		ROLE_ID= #{record.roleId,jdbcType=INTEGER},
	</if>
	<if test="record.userId != null" >
		USER_ID= #{record.userId,jdbcType=INTEGER},
	</if>
	<if test="record.createdDate != null" >
		CREATED_DATE= #{record.createdDate,jdbcType=TIMESTAMP},
	</if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Arg_Where_Clause" />
    </if>
  </update>
  <update id="updateByArg" parameterType="map" >
    update am_user_role
    set 
		ROLE_ID = #{record.roleId,jdbcType=INTEGER},	USER_ID = #{record.userId,jdbcType=INTEGER},	CREATED_DATE = #{record.createdDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Arg_Where_Clause" />
    </if>
  </update>
  <insert id="insert" parameterType="com.ztesoft.web.demo.db.po.AmUserRolePO" >
		insert into am_user_role(USER_ROLE_ID,ROLE_ID,USER_ID,CREATED_DATE
			)
		 values (#{userRoleId,jdbcType=INTEGER},#{roleId,jdbcType=INTEGER},#{userId,jdbcType=INTEGER},#{createdDate,jdbcType=TIMESTAMP}
			)
  </insert>
  <insert id="insertSelective" parameterType="com.ztesoft.web.demo.db.po.AmUserRolePO" >
		insert into am_user_role
<trim prefix="(" suffix=")" suffixOverrides="," >
	<if test="userRoleId != null" >
		USER_ROLE_ID,
	</if>
	<if test="roleId != null" >
		ROLE_ID,
	</if>
	<if test="userId != null" >
		USER_ID,
	</if>
	<if test="createdDate != null" >
		CREATED_DATE,
	</if>
 </trim>
  <trim prefix="values (" suffix=")" suffixOverrides="," >
	<if test="userRoleId != null" >
		#{userRoleId,jdbcType=INTEGER},
	</if>
	<if test="roleId != null" >
		#{roleId,jdbcType=INTEGER},
	</if>
	<if test="userId != null" >
		#{userId,jdbcType=INTEGER},
	</if>
	<if test="createdDate != null" >
		#{createdDate,jdbcType=TIMESTAMP},
	</if>
    </trim>
  </insert>
   <insert id="insertBatch" parameterType="list" >
		insert into am_user_role(USER_ROLE_ID,ROLE_ID,USER_ID,CREATED_DATE
			)
		 values 
		 <foreach collection="list" item="item" index="index" separator=",">(#{ item.userRoleId,jdbcType=INTEGER},#{ item.roleId,jdbcType=INTEGER},#{ item.userId,jdbcType=INTEGER},#{ item.createdDate,jdbcType=TIMESTAMP}
			)
		</foreach>
  </insert>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
		delete from am_user_role
 where USER_ROLE_ID = #{userRoleId,jdbcType=INTEGER}
	</delete>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
		select
		<include refid="Base_Column_List" />
		from am_user_role
 where USER_ROLE_ID = #{userRoleId,jdbcType=INTEGER}
	</select>
	<update id="updateByPrimaryKeySelective" parameterType="com.ztesoft.web.demo.db.po.AmUserRolePO" >
		update am_user_role
		<set >
	<if test="roleId != null" >
		ROLE_ID = #{roleId,jdbcType=INTEGER},
	</if>
	<if test="userId != null" >
		USER_ID = #{userId,jdbcType=INTEGER},
	</if>
	<if test="createdDate != null" >
		CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
	</if>
		</set >
	 where USER_ROLE_ID = #{userRoleId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ztesoft.web.demo.db.po.AmUserRolePO" >
		update am_user_role
		set 
		ROLE_ID = #{roleId,jdbcType=INTEGER},
		USER_ID = #{userId,jdbcType=INTEGER},
		CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP}
	 where USER_ROLE_ID = #{userRoleId,jdbcType=INTEGER}
	</update>
</mapper>