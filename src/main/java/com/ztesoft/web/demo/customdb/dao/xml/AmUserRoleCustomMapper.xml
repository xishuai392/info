<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper
	namespace="com.ztesoft.web.demo.customdb.dao.mapper.IAmUserRoleMapper">

	<resultMap id="resultMap"
		type="com.ztesoft.web.demo.customdb.dao.dto.AmUserRoleDto">
		<result column="USER_ROLE_ID" property="userRoleId" jdbcType="INTEGER" />
		<result column="ROLE_ID" property="roleId" jdbcType="INTEGER" />
		<result column="USER_ID" property="userId" jdbcType="INTEGER" />
        
        
		<result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
		<result column="COMMENTS" property="comments" jdbcType="VARCHAR" />
		<result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
		<result column="NICK_NAME" property="nickName" jdbcType="VARCHAR" />
		<result column="STATE" property="state" jdbcType="VARCHAR" />
	</resultMap>
	
	
	<resultMap id="userResultMap" type="com.ztesoft.web.demo.db.po.AmUserPO">
		<id column="USER_ID" property="userId" jdbcType="INTEGER" />
		<result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
		<result column="user_code" property="userCode" jdbcType="VARCHAR" />
		<result column="TELEPHONE" property="telephone" jdbcType="VARCHAR" />
		<result column="EMAIL" property="email" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="AGE" property="age" jdbcType="INTEGER" />
		<result column="STATE" property="state" jdbcType="CHAR" />
		<result column="CREATED_DATE" property="createdDate" jdbcType="TIMESTAMP" />
		<result column="NICK_NAME" property="nickName" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="userRoleColumnList">
		AUR.USER_ROLE_ID
		,AUR.ROLE_ID
		,AUR.USER_ID
	</sql>

	<sql id="roleColumnList">
        ,AR.ROLE_NAME,AR.COMMENTS
	</sql>
    
	<sql id="userColumnList">
		,AU.USER_NAME
	</sql>
	
	<sql id="userBaseColumnList">
        AU.USER_ID,AU.USER_NAME,AU.user_code,AU.TELEPHONE,AU.EMAIL,AU.password,AU.AGE,AU.STATE,AU.CREATED_DATE,AU.NICK_NAME
	</sql>

	
	<select id="selectListByUserId" resultMap="resultMap"
		parameterType="java.lang.Integer">
        SELECT
		<include refid="userRoleColumnList" />
		<include refid="roleColumnList" />
		<include refid="userColumnList" />
        FROM
        AM_USER_ROLE AUR, AM_ROLE AR, AM_USER AU
        WHERE AUR.ROLE_ID = AR.ROLE_ID
        AND AUR.USER_ID = AU.USER_ID
        AND AUR.USER_ID = #{userId}
	</select>
    
    
	<select id="qryAmUserListByRoleId" resultMap="resultMap"
		parameterType="java.lang.Integer">
        SELECT AUR.USER_ROLE_ID,
		<include refid="userBaseColumnList" />
        FROM
        AM_USER_ROLE AUR, AM_USER AU
        WHERE AUR.ROLE_ID = #{roleId}
        AND AUR.USER_ID = AU.USER_ID
	</select>
    
	<select id="qryAmUserListExcludeRoleId" resultMap="userResultMap"
		parameterType="java.lang.Integer">
        SELECT
		<include refid="userBaseColumnList" />
        FROM
        AM_USER AU
        WHERE AU.USER_ID not in(select AUR.USER_ID from AM_USER_ROLE AUR where AUR.ROLE_ID = #{roleId})
	</select>
    
    
	<select id="qryAmUserListByUserRoleIdList" resultMap="resultMap"
		parameterType="java.util.List">
        SELECT AUR.USER_ROLE_ID,
		<include refid="userBaseColumnList" />
        FROM
        AM_USER_ROLE AUR, AM_USER AU
        WHERE AUR.USER_ROLE_ID in 
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach> 
        AND AUR.USER_ID = AU.USER_ID
	</select>
    
    
    
    
    
    
    
    
	<!--老的方式，分页，测试用 -->
	<select id="selectPageList" resultMap="resultMap" parameterType="com.ztesoft.web.demo.customdb.dao.dto.AmUserRoleDto" >
    	SELECT AUR.USER_ROLE_ID,
		<include refid="userBaseColumnList" />
        FROM
        AM_USER_ROLE AUR, AM_USER AU
        WHERE AUR.ROLE_ID = #{roleId}
        AND AUR.USER_ID = AU.USER_ID
	</select>
	
	<!--老的方式，分页，测试用，最好不要用Map当参数 -->
	<select id="selectPageListByMap" resultType="map" parameterType="map">
	SELECT AUR.USER_ROLE_ID,
		<include refid="userBaseColumnList" />
        FROM
        AM_USER_ROLE AUR, AM_USER AU
        WHERE AUR.ROLE_ID = #{roleId}
        AND AUR.USER_ID = AU.USER_ID
	</select>

	<!--测试用，最好不要用Map当参数 -->
	<select id="selectListByMap" resultType="map" parameterType="map">
	SELECT AUR.USER_ROLE_ID,
		<include refid="userBaseColumnList" />
        FROM
        AM_USER_ROLE AUR, AM_USER AU
        WHERE AUR.ROLE_ID = #{roleId}
        AND AUR.USER_ID = AU.USER_ID
	</select>

</mapper>