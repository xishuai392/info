<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.ztesoft.web.common.db.dao.mapper.IDbTableMapper" >
  <resultMap id="BaseResultMap" type="com.ztesoft.web.common.db.po.DbTablePO">
  	<id column="id" property="id" jdbcType="INTEGER" />
  	<result column="table_name" property="tableName" jdbcType="VARCHAR" />
  	<result column="remarks" property="remarks" jdbcType="VARCHAR" />
  	<result column="db_id" property="dbId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
  	id,table_name,remarks,db_id
  </sql>
  <sql id="Arg_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Arg_Where_Clause" >
    <where >
      <foreach collection="arg.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>  
  <select id="selectByArg" resultMap="BaseResultMap" parameterType="com.ztesoft.web.common.db.arg.DbTableArg" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DB_TABLE
    <if test="_parameter != null" >
      <include refid="Arg_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>  
  <select id="selectByArgAndPage" resultMap="BaseResultMap" parameterType="com.ztesoft.web.common.db.arg.DbTableArg" >
    select
    <if test="distinct" >
      distinct
    </if>
     <if test="columns == null" >
    	<include refid="Base_Column_List" />
    </if>
    <if test="columns != null" >
    	${columns}
   	</if>
    from DB_TABLE
    <if test="_parameter != null" >
      <include refid="Arg_Where_Clause" />
    </if>
	<if test="groupByClause != null" >
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="countByArg" parameterType="com.ztesoft.web.common.db.arg.DbTableArg" resultType="java.lang.Integer" >
    <if test="countsql1 != null" >
    	${countsql1}
    	<if test="_parameter != null" >
		  <include refid="Arg_Where_Clause" />
		</if>
		${countsql2}
    </if>
	<if test="countsql1 == null" >
		select count(*) from DB_TABLE
		<if test="_parameter != null" >
		  <include refid="Arg_Where_Clause" />
		</if>
	</if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
	select
	<include refid="Base_Column_List" />
	from DB_TABLE
	where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="com.ztesoft.web.common.db.po.DbTablePO"  >
		insert into DB_TABLE(id,table_name,remarks,db_id)
		values (#{id,jdbcType=INTEGER},#{tableName,jdbcType=VARCHAR},#{remarks,jdbcType=VARCHAR},#{dbId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ztesoft.web.common.db.po.DbTablePO">
		insert into DB_TABLE
	<trim prefix="(" suffix=")" suffixOverrides="," >
		<if test="id != null" >
			id,
		</if>
		<if test="tableName != null" >
			table_name,
		</if>
		<if test="remarks != null" >
			remarks,
		</if>
		<if test="dbId != null" >
			db_id,
		</if>
 	</trim>
	<trim prefix="values (" suffix=")" suffixOverrides="," >
		<if test="id != null" >
			#{id,jdbcType=INTEGER},
		</if>
		<if test="tableName != null" >
			#{tableName,jdbcType=VARCHAR},
		</if>
		<if test="remarks != null" >
			#{remarks,jdbcType=VARCHAR},
		</if>
		<if test="dbId != null" >
			#{dbId,jdbcType=INTEGER},
		</if>
 	</trim> 	
  </insert>	
  <insert id="insertBatch" parameterType="list"  >
	insert into DB_TABLE(id,table_name,remarks,db_id)
	 values 
	 <foreach collection="list" item="item" index="index" separator=",">
	 		(#{item.id,jdbcType=INTEGER},#{item.tableName,jdbcType=VARCHAR},#{item.remarks,jdbcType=VARCHAR},#{item.dbId,jdbcType=INTEGER})
	 </foreach>
  </insert>
  <update id="updateByArgSelective" parameterType="map" >
    update DB_TABLE
    <set>
		<if test="record.tableName != null" >
			table_name= #{record.tableName,jdbcType=VARCHAR},
		</if>
		<if test="record.remarks != null" >
			remarks= #{record.remarks,jdbcType=VARCHAR},
		</if>
		<if test="record.dbId != null" >
			db_id= #{record.dbId,jdbcType=INTEGER}
		</if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Arg_Where_Clause" />
    </if>
  </update>
  <update id="updateByArg" parameterType="map" >
    update DB_TABLE
    set 
		id = #{record.id,jdbcType=INTEGER},
		table_name = #{record.tableName,jdbcType=VARCHAR},
		remarks = #{record.remarks,jdbcType=VARCHAR},
		db_id = #{record.dbId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Arg_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ztesoft.web.common.db.po.DbTablePO" >
		update DB_TABLE
	<set >
	<if test="tableName != null" >
		table_name = #{tableName,jdbcType=VARCHAR},
	</if>
	<if test="remarks != null" >
		remarks = #{remarks,jdbcType=VARCHAR},
	</if>
		db_id = #{dbId,jdbcType=INTEGER}
	</set >
	 where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ztesoft.web.common.db.po.DbTablePO" >
		update DB_TABLE
		set 
			table_name = #{tableName,jdbcType=VARCHAR},
			remarks = #{remarks,jdbcType=VARCHAR},
			db_id = #{dbId,jdbcType=INTEGER}
	 where id = #{id,jdbcType=INTEGER}
   </update>
  <delete id="deleteByArg" parameterType="com.ztesoft.web.common.db.arg.DbTableArg" >
    delete from DB_TABLE
    <if test="_parameter != null" >
      <include refid="Arg_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
	 delete from DB_TABLE
	 where id = #{id,jdbcType=INTEGER}
  </delete>
</mapper>  