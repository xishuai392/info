<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.ztesoft.web.permission.db.dao.mapper.IAuditRoleMapper" >
  <resultMap id="BaseResultMap" type="com.ztesoft.web.permission.db.po.AuditRolePO">
  	<id column="ROLE_ID" property="roleId" jdbcType="INTEGER" />
  	<result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
  	<result column="COMMENTS" property="comments" jdbcType="VARCHAR" />
  	<result column="STATE_DATE" property="stateDate" jdbcType="DATE" />
  	<result column="STATE" property="state" jdbcType="CHAR" />
  	<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
  	ROLE_ID,ROLE_NAME,COMMENTS,STATE_DATE,STATE,CREATED_DATE
  </sql>
  <sql id="Arg_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Arg_Where_Clause" >
    <where >
      <foreach collection="arg.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>  
  <select id="selectByArg" resultMap="BaseResultMap" parameterType="com.ztesoft.web.permission.db.arg.AuditRoleArg" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from AUDIT_ROLE
    <if test="_parameter != null" >
      <include refid="Arg_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>  
  <select id="selectByArgAndPage" resultMap="BaseResultMap" parameterType="com.ztesoft.web.permission.db.arg.AuditRoleArg" >
    select
    <if test="distinct" >
      distinct
    </if>
     <if test="columns == null" >
    	<include refid="Base_Column_List" />
    </if>
    <if test="columns != null" >
    	${columns}
   	</if>
    from AUDIT_ROLE
    <if test="_parameter != null" >
      <include refid="Arg_Where_Clause" />
    </if>
	<if test="groupByClause != null" >
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="countByArg" parameterType="com.ztesoft.web.permission.db.arg.AuditRoleArg" resultType="java.lang.Integer" >
    <if test="countsql1 != null" >
    	${countsql1}
    	<if test="_parameter != null" >
		  <include refid="Arg_Where_Clause" />
		</if>
		${countsql2}
    </if>
	<if test="countsql1 == null" >
		select count(*) from AUDIT_ROLE
		<if test="_parameter != null" >
		  <include refid="Arg_Where_Clause" />
		</if>
	</if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
	select
	<include refid="Base_Column_List" />
	from AUDIT_ROLE
	where ROLE_ID = #{roleId,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="com.ztesoft.web.permission.db.po.AuditRolePO"  >
		insert into AUDIT_ROLE(ROLE_ID,ROLE_NAME,COMMENTS,STATE_DATE,STATE,CREATED_DATE)
		values (#{roleId,jdbcType=INTEGER},#{roleName,jdbcType=VARCHAR},#{comments,jdbcType=VARCHAR},#{stateDate,jdbcType=DATE},#{state,jdbcType=CHAR},#{createdDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.ztesoft.web.permission.db.po.AuditRolePO">
		insert into AUDIT_ROLE
	<trim prefix="(" suffix=")" suffixOverrides="," >
		<if test="roleId != null" >
			ROLE_ID,
		</if>
		<if test="roleName != null" >
			ROLE_NAME,
		</if>
		<if test="comments != null" >
			COMMENTS,
		</if>
		<if test="stateDate != null" >
			STATE_DATE,
		</if>
		<if test="state != null" >
			STATE,
		</if>
		<if test="createdDate != null" >
			CREATED_DATE,
		</if>
 	</trim>
	<trim prefix="values (" suffix=")" suffixOverrides="," >
		<if test="roleId != null" >
			#{roleId,jdbcType=INTEGER},
		</if>
		<if test="roleName != null" >
			#{roleName,jdbcType=VARCHAR},
		</if>
		<if test="comments != null" >
			#{comments,jdbcType=VARCHAR},
		</if>
		<if test="stateDate != null" >
			#{stateDate,jdbcType=DATE},
		</if>
		<if test="state != null" >
			#{state,jdbcType=CHAR},
		</if>
		<if test="createdDate != null" >
			#{createdDate,jdbcType=DATE},
		</if>
 	</trim> 	
  </insert>	
  <insert id="insertBatch" parameterType="list"  >
	insert into AUDIT_ROLE(ROLE_ID,ROLE_NAME,COMMENTS,STATE_DATE,STATE,CREATED_DATE)
	 values 
	 <foreach collection="list" item="item" index="index" separator=",">
	 		(#{item.roleId,jdbcType=INTEGER},#{item.roleName,jdbcType=VARCHAR},#{item.comments,jdbcType=VARCHAR},#{item.stateDate,jdbcType=DATE},#{item.state,jdbcType=CHAR},#{item.createdDate,jdbcType=DATE})
	 </foreach>
  </insert>
  <update id="updateByArgSelective" parameterType="map" >
    update AUDIT_ROLE
    <set>
		<if test="record.roleName != null" >
			ROLE_NAME= #{record.roleName,jdbcType=VARCHAR},
		</if>
		<if test="record.comments != null" >
			COMMENTS= #{record.comments,jdbcType=VARCHAR},
		</if>
		<if test="record.stateDate != null" >
			STATE_DATE= #{record.stateDate,jdbcType=DATE},
		</if>
		<if test="record.state != null" >
			STATE= #{record.state,jdbcType=CHAR},
		</if>
		<if test="record.createdDate != null" >
			CREATED_DATE= #{record.createdDate,jdbcType=DATE}
		</if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Arg_Where_Clause" />
    </if>
  </update>
  <update id="updateByArg" parameterType="map" >
    update AUDIT_ROLE
    set 
		ROLE_ID = #{record.roleId,jdbcType=INTEGER},
		ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
		COMMENTS = #{record.comments,jdbcType=VARCHAR},
		STATE_DATE = #{record.stateDate,jdbcType=DATE},
		STATE = #{record.state,jdbcType=CHAR},
		CREATED_DATE = #{record.createdDate,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Arg_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ztesoft.web.permission.db.po.AuditRolePO" >
		update AUDIT_ROLE
	<set >
	<if test="roleName != null" >
		ROLE_NAME = #{roleName,jdbcType=VARCHAR},
	</if>
	<if test="comments != null" >
		COMMENTS = #{comments,jdbcType=VARCHAR},
	</if>
	<if test="stateDate != null" >
		STATE_DATE = #{stateDate,jdbcType=DATE},
	</if>
	<if test="state != null" >
		STATE = #{state,jdbcType=CHAR},
	</if>
	<if test="createdDate != null" >
		CREATED_DATE = #{createdDate,jdbcType=DATE}
	</if>
	</set >
	 where ROLE_ID = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ztesoft.web.permission.db.po.AuditRolePO" >
		update AUDIT_ROLE
		set 
			ROLE_NAME = #{roleName,jdbcType=VARCHAR},
			COMMENTS = #{comments,jdbcType=VARCHAR},
			STATE_DATE = #{stateDate,jdbcType=DATE},
			STATE = #{state,jdbcType=CHAR},
			CREATED_DATE = #{createdDate,jdbcType=DATE}
	 where ROLE_ID = #{roleId,jdbcType=INTEGER}
   </update>
  <delete id="deleteByArg" parameterType="com.ztesoft.web.permission.db.arg.AuditRoleArg" >
    delete from AUDIT_ROLE
    <if test="_parameter != null" >
      <include refid="Arg_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
	 delete from AUDIT_ROLE
	 where ROLE_ID = #{roleId,jdbcType=INTEGER}
  </delete>
</mapper>  